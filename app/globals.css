@tailwind base;
@tailwind components;
@tailwind utilities;


:root {
    --foreground-rgb: 0, 0, 0;
    --background-start-rgb: 214, 219, 220;
    --background-end-rgb: 255, 255, 255;
  }
  
  :root {
    --foreground-rgb: 255, 255, 255;
    --background-start-rgb: 0, 0, 0;
    --background-end-rgb: 0, 0, 0;
  }
  
  body {
    color: rgb(var(--foreground-rgb));
    background: linear-gradient(
        to bottom,
        transparent,
        rgb(var(--background-end-rgb))
      )
      rgb(var(--background-start-rgb));
  }
  
  html {
      --scroll-behavior: smooth!important;
      scroll-behavior: smooth!important;
      }
      
    
    .stepper-container {
      width: 80px; /* Adjust the width as needed */
      /* Adjust the height as needed */
      
    }
  
    .circle {
      position: relative;
      width: 17px; /* Adjust the width and height as needed */
      height: 17px;
      border-radius: 50%;
      background-color: #ffffff; /* Adjust the background color as needed */
      margin: 0px; /* Add margin to center the circle */
    }
  
    .circle::before {
      content: "";
      position: absolute;
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%); /* Center the inner circle */
      width: 23px; 
      height: 23px;
      border-radius: 50%;
      border: 2px solid rgb(255, 255, 255); /* Adjust the border color and thickness as needed */
    }
    
    .circleCompleted {
      position: relative;
      width: 17px; /* Adjust the width and height as needed */
      height: 17px;
      border-radius: 50%;
      background-color: #81C784; /* Adjust the background color as needed */
      margin: 0px; /* Add margin to center the circle */
    }
  
    .circleCompleted::before {
      content: "";
      position: absolute;
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%); /* Center the inner circle */
      width: 23px; 
      height: 23px;
      border-radius: 50%;
      border: 2px solid #ffffff; /* Adjust the border color and thickness as needed */
    }
  
  .linee{
  
      background: linear-gradient(148deg, #FFF 16.67%, rgba(255, 255, 255, 0.00) 100%);
  }
  
  #my-title-input[data-default-value]::before {
      content: attr(data-default-value);
      color: #a0aec0;
      pointer-events: none;
    }
  
    #my-title-input[data-default-value]:not(:empty)::before {
      display: none;
    }

    .hero {
        background-image: url("/g14.svg");
        
      }
.heroblack1{
    background: linear-gradient(287deg, rgba(0, 0, 0, 0.09) 0%, rgba(255, 255, 255, 0.15) 25%, rgba(0, 0, 0, 0.11) 60.76%);
}

.heroblack2{
    background: linear-gradient(276deg, rgba(0, 0, 0, 0.80) 18.75%, rgba(0, 0, 0, 0.63) 51.46%, rgba(0, 0, 0, 0.80) 86.46%);
}

.heroblack3{
    background: linear-gradient(180deg, rgba(0, 0, 0, 0.59) 18.75%, rgba(0, 0, 0, 0.59) 51.56%, rgba(24, 24, 24, 0.59) 86.46%);
}

.land2bg{
    
    background: linear-gradient(1deg, #000 64.58%, rgba(0, 0, 0, 0.00) 98.99%), linear-gradient(231deg, #000 25.87%, #323232 34.48%, #434343 40.93%, #2D2D2D 47.98%, #080808 53.84%);
}

.land3bg{

background: radial-gradient(50% 50% at 50% 50%, #FFF 0%, #505050 35.94%, #1C1C1C 61.98%, #000 100%);
}

.land3te{
    background: linear-gradient(180deg, #8C8C8C 0%, #999999 24.22%, #999999 48.18%, rgba(255, 255, 255, 0.00) 129.16%);
    background-clip: text;
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
}

.footer {
    background-image: url("/g14.svg");
}

.footerblack {
    background: linear-gradient(269deg, rgba(0, 0, 0, 0.92) 34.77%, rgba(0, 0, 0, 0.84) 54.93%, rgba(0, 0, 0, 0.94) 69.21%);
}

.implum {
        mix-blend-mode: luminosity !important;
}

.polyimg{
    mix-blend-mode: luminosity !important;
}

@keyframes bnblAnimation {
    0%, 100% {
      transform: scale(1) translateY(0) translateX(0);
    }
    50% {
      transform: scale(1.1) translateY(-8px) translateX(-8px);
    }
  }
  
  .bnbl {
    animation-name: bnblAnimation;
    animation-duration: 8s;
    animation-direction: alternate;
    animation-timing-function: cubic-bezier(0.45, 0.05, 0.55, 0.95);
    animation-iteration-count: infinite;
  }

  @keyframes polygonlAnimation {
    0%, 100% {
      transform: scale(1) translateY(0) translateX(0) rotate(24deg);
    }
    50% {
      transform: scale(1.05) translateY(4px) translateX(-4px) rotate(15deg);
    }
  }
  
  .polygonl {
    animation-name: polygonlAnimation;
    animation-duration: 8s;
    animation-direction: alternate;
    animation-timing-function: cubic-bezier(0.45, 0.05, 0.55, 0.95);
    animation-iteration-count: infinite;
  }
  
  @keyframes avalanchelAnimation {
    0%, 100% {
      transform: scale(1) translateY(0) translateX(0) rotate(0deg);
    }
    50% {
      transform: scale(1.08) translateY(4px) translateX(4px) rotate(15deg);
    }
  }
  
  .avalanchel {
    animation-name: avalanchelAnimation;
    animation-duration: 8s;
    animation-timing-function: cubic-bezier(0.45, 0.05, 0.55, 0.95); 
    animation-direction: alternate;
    animation-iteration-count: infinite;
  }
  
  @keyframes arbitrumlAnimation {
    0%, 100% {
      transform: scale(1) translateY(0) translateX(0) rotate(0deg);
    }
    50% {
      transform: scale(1.02) translateY(-10px) translateX(4px) rotate(10deg);
    }
  }
  
  .arbitruml {
    animation-name: arbitrumlAnimation;
    animation-duration: 8s;
    animation-timing-function: cubic-bezier(0.45, 0.05, 0.55, 0.95); 
    animation-direction: alternate;
    animation-iteration-count: infinite;
  }
  
  @keyframes ethereumlAnimation {
    0%, 100% {
      transform: scale(1) translateY(0) translateX(0) rotate(0deg);
    }
    50% {
      transform: scale(1.07) translateY(-3px) translateX(-2px) rotate(1deg);
    }
  }
  
  .ethereuml {
    animation-name: ethereumlAnimation;
    animation-duration: 8s;
    animation-timing-function: cubic-bezier(0.45, 0.05, 0.55, 0.95);
    animation-direction: alternate;
    animation-iteration-count: infinite;
  }
  
  @keyframes lightsAnimation {
    0%, 100% {
      transform: rotate(0deg) scale(1);
    }
    50% {
      transform: rotate(5deg) scale(1.5);
    }
  }
  
  .circleeth, .outereth, .innereth {
    animation-name: lightsAnimation;
    animation-duration: 4s;
    animation-timing-function: ease-in-out; /* Adjust the easing as needed */
    animation-direction: alternate;
    animation-iteration-count: infinite;
  }
  
  @keyframes anonlogoAnimation {
    0%, 100% {
      transform: translateY(-15px) rotate(0deg);
    }
    50% {
      transform: translateY(15px) rotate(-10deg);
    }
  }
  
  .anonlogo {
    animation-name: anonlogoAnimation;
    animation-duration: 8s;
    animation-timing-function: ease-in-out; /* Adjust the easing as needed */
    animation-direction: alternate;
    animation-iteration-count: infinite;
  }

  @keyframes anonlogooAnimation {
    0%, 100% {
      transform: translateY(-15px) rotate(0deg);
    }
    50% {
      transform: translateY(15px) rotate(10deg);
    }
  }
  
  .anonlogoo {
    animation-name: anonlogooAnimation;
    animation-duration: 7s;
    animation-timing-function: ease-in-out; /* Adjust the easing as needed */
    animation-direction: alternate;
    animation-iteration-count: infinite;
  }
  

  @keyframes lightAnimation {
    0% {
      height: 20%;
      opacity: 1;
    }
    50% {
      height: 100%;
      opacity: 1;
    }
    100% {
      height: 20%;
      opacity: 1;
    }
  }
  
  .annonllight {
    position: relative;
    overflow: hidden;
    animation-name: lightAnimation;
    animation-duration: 3s;
    animation-timing-function: ease-in-out; /* Adjust the easing as needed */
    animation-direction: alternate;
    animation-iteration-count: infinite;
  }
  

  @keyframes lightAnimation {
    0% {
        top: 15%;
        opacity: 0.8;
  
    }
    50% {
        top: 40%;
        opacity: 1;
    }
    100% {
        top: 10%;
        opacity: 0.8;
    }
  }
  
  .gole {
    overflow: hidden;
    background: linear-gradient(180deg, #000 22.44%, #474747 100%);
   
    animation-name: lightAnimation;
    animation-duration: 8s;
    
    animation-timing-function: ease-in-out; /* Adjust the easing as needed */
    animation-direction: alternate;
    animation-iteration-count: infinite;
    transition: background 3s ease-in-out;
  }

  .gole1 {

    background: linear-gradient(180deg, rgb(231, 35, 35) 22.44%, #d63434 100%);
   opacity: 1;
    animation-name: lightAnimation1;
    animation-duration: 6s;
    
    animation-timing-function: ease-in-out; /* Adjust the easing as needed */
    animation-direction: alternate;
    animation-iteration-count: infinite;
    transition: background 3s ease-in-out;
  }